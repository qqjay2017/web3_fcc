{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x2b253f0ab24d737498efbd2d83e4ef9b82592fd0ef8f5a043c71d37b29a9a090",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "808170",
    "logsBloom": "0x
    "blockHash": "0x32f11a1e7f8cdf357a40104bc39721d7cbf2cdb6d9e87b7b2080334b5f15f66d",
    "transactionHash": "0x2b253f0ab24d737498efbd2d83e4ef9b82592fd0ef8f5a043c71d37b29a9a090",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "808170",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "0cc0593d39edaf6dfc5ac0df9961b262",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    // 1 usd\\n    //  constant \\u53ef\\u4ee5\\u7701gas\\n    uint256 public constant MINIMUM_USD = 1 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n     AggregatorV3Interface public priceFeed ;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // \\u6350\\u6b3e\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough!\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    // \\u63d0\\u73b0\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex = funderIndex + 1\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // https://solidity-by-example.org/sending-ether/\\n        // transer\\n        //  payable(msg.sender ).transfer(address(this).balance);\\n\\n        // send\\n        //  bool sendSuccess =  payable(msg.sender ).send(address(this).balance);\\n        //  require(sendSuccess,\\\"Send Failed\\\");\\n\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Send Failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender == i_owner) {\\n            revert NotOwner();\\n        }\\n\\n        //  require(msg.sender == i_owner,\\\"Sender is not owner\\\");\\n        //  \\u4e0b\\u5212\\u7ebf\\u6307\\u5269\\u4f59\\u4ee3\\u7801\\n        _;\\n    }\\n\\n    // https://solidity-by-example.org/fallback/\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xd15536b6ec9e6a0b292303719017ea28d72ec833fffd71dfdc0876fe9b274b30\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n \\n\\n    function getPrice ( AggregatorV3Interface  priceFeed ) internal view returns (uint256){\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e); \\n        // ABI\\n        // Address 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        (\\n            /*uint80 roundID*/,\\n            int price,\\n            /*uint startedAt*/,\\n            /*uint timeStamp*/,\\n            /*uint80 answeredInRound*/\\n        ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n    function getConversionRate(uint256 ethAmount ,  AggregatorV3Interface  priceFeed )internal view returns (uint256){\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n\\n    }\\n\\n}\",\"keccak256\":\"0xc8201378ef8f80a40a0ec0e2a2db8e37caf2908a1ddba6164ea11329b67f5331\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610e9b380380610e9b83398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d3c61015f600039600081816102d3015261055e0152610d3c6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610796565b610512565b6040516100d891906107dc565b60405180910390f35b3480156100ed57600080fd5b506100f661052a565b60405161010391906107dc565b60405180910390f35b34801561011857600080fd5b50610121610536565b60405161012e9190610856565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055c565b6040516101639190610880565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108c7565b610580565b6040516101a09190610880565b60405180910390f35b670de0b6b3a76400006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105bf90919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610951565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610356576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040257600080828154811061037b5761037a610971565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506001816103fb91906109cf565b9050610359565b50600067ffffffffffffffff81111561041e5761041d610a03565b5b60405190808252806020026020018201604052801561044c5781602001602082028036833780820191505090505b506000908051906020019061046292919061068c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048990610a63565b60006040518083038185875af1925050503d80600081146104c6576040519150601f19603f3d011682016040523d82523d6000602084013e6104cb565b606091505b505090508061050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690610ac4565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b670de0b6b3a764000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cb836105fb565b90506000670de0b6b3a764000085836105e49190610ae4565b6105ee9190610b55565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d9190610c13565b5050509150506402540be400816106849190610c8e565b915050919050565b828054828255906000526020600020908101928215610705579160200282015b828111156107045782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ac565b5b5090506107129190610716565b5090565b5b8082111561072f576000816000905550600101610717565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076382610738565b9050919050565b61077381610758565b811461077e57600080fd5b50565b6000813590506107908161076a565b92915050565b6000602082840312156107ac576107ab610733565b5b60006107ba84828501610781565b91505092915050565b6000819050919050565b6107d6816107c3565b82525050565b60006020820190506107f160008301846107cd565b92915050565b6000819050919050565b600061081c61081761081284610738565b6107f7565b610738565b9050919050565b600061082e82610801565b9050919050565b600061084082610823565b9050919050565b61085081610835565b82525050565b600060208201905061086b6000830184610847565b92915050565b61087a81610758565b82525050565b60006020820190506108956000830184610871565b92915050565b6108a4816107c3565b81146108af57600080fd5b50565b6000813590506108c18161089b565b92915050565b6000602082840312156108dd576108dc610733565b5b60006108eb848285016108b2565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b600061093b6013836108f4565b915061094682610905565b602082019050919050565b6000602082019050818103600083015261096a8161092e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109da826107c3565b91506109e5836107c3565b92508282019050808211156109fd576109fc6109a0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a4d600083610a32565b9150610a5882610a3d565b600082019050919050565b6000610a6e82610a40565b9150819050919050565b7f53656e64204661696c6564000000000000000000000000000000000000000000600082015250565b6000610aae600b836108f4565b9150610ab982610a78565b602082019050919050565b60006020820190508181036000830152610add81610aa1565b9050919050565b6000610aef826107c3565b9150610afa836107c3565b9250828202610b08816107c3565b91508282048414831517610b1f57610b1e6109a0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b60826107c3565b9150610b6b836107c3565b925082610b7b57610b7a610b26565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ba581610b86565b8114610bb057600080fd5b50565b600081519050610bc281610b9c565b92915050565b6000819050919050565b610bdb81610bc8565b8114610be657600080fd5b50565b600081519050610bf881610bd2565b92915050565b600081519050610c0d8161089b565b92915050565b600080600080600060a08688031215610c2f57610c2e610733565b5b6000610c3d88828901610bb3565b9550506020610c4e88828901610be9565b9450506040610c5f88828901610bfe565b9350506060610c7088828901610bfe565b9250506080610c8188828901610bb3565b9150509295509295909350565b6000610c9982610bc8565b9150610ca483610bc8565b9250828202610cb281610bc8565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cea57610ce96109a0565b5b8282058414831517610cff57610cfe6109a0565b5b509291505056fea26469706673582212206e7f74163aacd4c9c8ba13c24ab2700ae90f6c9ecccccdec83e6450a86f6f2e364736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610796565b610512565b6040516100d891906107dc565b60405180910390f35b3480156100ed57600080fd5b506100f661052a565b60405161010391906107dc565b60405180910390f35b34801561011857600080fd5b50610121610536565b60405161012e9190610856565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055c565b6040516101639190610880565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108c7565b610580565b6040516101a09190610880565b60405180910390f35b670de0b6b3a76400006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105bf90919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610951565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610356576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040257600080828154811061037b5761037a610971565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506001816103fb91906109cf565b9050610359565b50600067ffffffffffffffff81111561041e5761041d610a03565b5b60405190808252806020026020018201604052801561044c5781602001602082028036833780820191505090505b506000908051906020019061046292919061068c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048990610a63565b60006040518083038185875af1925050503d80600081146104c6576040519150601f19603f3d011682016040523d82523d6000602084013e6104cb565b606091505b505090508061050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690610ac4565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b670de0b6b3a764000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cb836105fb565b90506000670de0b6b3a764000085836105e49190610ae4565b6105ee9190610b55565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d9190610c13565b5050509150506402540be400816106849190610c8e565b915050919050565b828054828255906000526020600020908101928215610705579160200282015b828111156107045782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ac565b5b5090506107129190610716565b5090565b5b8082111561072f576000816000905550600101610717565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076382610738565b9050919050565b61077381610758565b811461077e57600080fd5b50565b6000813590506107908161076a565b92915050565b6000602082840312156107ac576107ab610733565b5b60006107ba84828501610781565b91505092915050565b6000819050919050565b6107d6816107c3565b82525050565b60006020820190506107f160008301846107cd565b92915050565b6000819050919050565b600061081c61081761081284610738565b6107f7565b610738565b9050919050565b600061082e82610801565b9050919050565b600061084082610823565b9050919050565b61085081610835565b82525050565b600060208201905061086b6000830184610847565b92915050565b61087a81610758565b82525050565b60006020820190506108956000830184610871565b92915050565b6108a4816107c3565b81146108af57600080fd5b50565b6000813590506108c18161089b565b92915050565b6000602082840312156108dd576108dc610733565b5b60006108eb848285016108b2565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b600061093b6013836108f4565b915061094682610905565b602082019050919050565b6000602082019050818103600083015261096a8161092e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109da826107c3565b91506109e5836107c3565b92508282019050808211156109fd576109fc6109a0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a4d600083610a32565b9150610a5882610a3d565b600082019050919050565b6000610a6e82610a40565b9150819050919050565b7f53656e64204661696c6564000000000000000000000000000000000000000000600082015250565b6000610aae600b836108f4565b9150610ab982610a78565b602082019050919050565b60006020820190508181036000830152610add81610aa1565b9050919050565b6000610aef826107c3565b9150610afa836107c3565b9250828202610b08816107c3565b91508282048414831517610b1f57610b1e6109a0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b60826107c3565b9150610b6b836107c3565b925082610b7b57610b7a610b26565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ba581610b86565b8114610bb057600080fd5b50565b600081519050610bc281610b9c565b92915050565b6000819050919050565b610bdb81610bc8565b8114610be657600080fd5b50565b600081519050610bf881610bd2565b92915050565b600081519050610c0d8161089b565b92915050565b600080600080600060a08688031215610c2f57610c2e610733565b5b6000610c3d88828901610bb3565b9550506020610c4e88828901610be9565b9450506040610c5f88828901610bfe565b9350506060610c7088828901610bfe565b9250506080610c8188828901610bb3565b9150509295509295909350565b6000610c9982610bc8565b9150610ca483610bc8565b9250828202610cb281610bc8565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cea57610ce96109a0565b5b8282058414831517610cff57610cfe6109a0565b5b509291505056fea26469706673582212206e7f74163aacd4c9c8ba13c24ab2700ae90f6c9ecccccdec83e6450a86f6f2e364736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}